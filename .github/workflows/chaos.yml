name: CHAOS ENGINEERING - ZERO DOWNTIME
on:
  schedule:
    - cron: "0 2 * * *"  # Run nightly at 2 AM UTC
  workflow_dispatch:      # Allow manual triggering

jobs:
  chaos-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start production stack
        run: docker compose -f docker-compose.production.yml up -d --build

      - name: Wait for all services healthy
        run: |
          for i in {1..60}; do
            if docker compose -f docker-compose.production.yml ps --format json | jq -r '.[] | select(.State == "running" and (.Health == "healthy" or .Health == "")) | .Name' | wc -l | grep -q "4"; then
              echo "All services healthy"
              break
            fi
            sleep 5
          done

      - name: Install k6 for load testing
        run: |
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6

      - name: Start background load test
        run: |
          export AI_URL=http://localhost:8081
          k6 run --duration=60s perf/ai-load.js > chaos-load-results.txt 2>&1 &
          echo $! > k6_pid.txt
          
      - name: Execute chaos (kill random AI replica)
        run: |
          chmod +x scripts/chaos-kill-one.sh
          bash scripts/chaos-kill-one.sh
          
      - name: Wait for load test completion
        run: |
          wait $(cat k6_pid.txt) || echo "Load test completed during chaos"
          
      - name: Verify zero error rate
        run: |
          echo "=== CHAOS LOAD TEST RESULTS ==="
          cat chaos-load-results.txt
          
          # Extract error rate from k6 output
          if grep -q "http_req_failed.*100.00%" chaos-load-results.txt; then
            echo "❌ CHAOS TEST FAILED: Error rate exceeded 0%"
            exit 1
          elif grep -q "✓ checks.*100%" chaos-load-results.txt; then
            echo "✅ CHAOS TEST PASSED: Zero errors during replica failure"
          else
            echo "⚠️  Cannot determine error rate from output"
            cat chaos-load-results.txt
            exit 1
          fi

      - name: Upload chaos test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: chaos-results
          path: chaos-load-results.txt

      - name: Cleanup
        if: always()
        run: docker compose -f docker-compose.production.yml down -v
